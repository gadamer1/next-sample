{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getRecentLawList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetRecentLawList),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(getDetailLawData),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetDetailLawData),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(queryingLawList),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchQueryingLawList),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(lawDataSaga);\n\nimport { fork, all, takeLatest, put } from \"redux-saga/effects\";\nimport { GET_RECENT_LAWLIST_REQUEST, GET_RECENT_LAWLIST_SUCCESS, GET_RECENT_LAWLIST_FAILURE, GET_DETAIL_LAWDATA_REQUEST, GET_DETAIL_LAWDATA_SUCCESS, GET_DETAIL_LAWDATA_FAILURE, QUERYING_LAWLIST_REQUEST, QUERYING_LAWLIST_FAILURE, QUERYING_LAWLIST_SUCCESS } from \"../reducers/lawData/actions\";\n\nfunction getRecentLawList(action) {\n  return _regeneratorRuntime.wrap(function getRecentLawList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return put({\n            type: GET_RECENT_LAWLIST_SUCCESS\n          });\n\n        case 3:\n          _context.next = 10;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 10;\n          return put({\n            type: GET_RECENT_LAWLIST_FAILURE\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 5]]);\n}\n\nfunction watchGetRecentLawList() {\n  return _regeneratorRuntime.wrap(function watchGetRecentLawList$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(GET_RECENT_LAWLIST_REQUEST, getRecentLawList);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction getDetailLawData(action) {\n  return _regeneratorRuntime.wrap(function getDetailLawData$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return put({\n            type: GET_DETAIL_LAWDATA_SUCCESS\n          });\n\n        case 3:\n          _context3.next = 10;\n          break;\n\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 10;\n          return put({\n            type: GET_DETAIL_LAWDATA_FAILURE\n          });\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 5]]);\n}\n\nfunction watchGetDetailLawData() {\n  return _regeneratorRuntime.wrap(function watchGetDetailLawData$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(GET_DETAIL_LAWDATA_REQUEST, getDetailLawData);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction queryingLawList(action) {\n  return _regeneratorRuntime.wrap(function queryingLawList$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return put({\n            type: QUERYING_LAWLIST_SUCCESS\n          });\n\n        case 3:\n          _context5.next = 10;\n          break;\n\n        case 5:\n          _context5.prev = 5;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 10;\n          return put({\n            type: QUERYING_LAWLIST_FAILURE\n          });\n\n        case 10:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 5]]);\n}\n\nfunction watchQueryingLawList() {\n  return _regeneratorRuntime.wrap(function watchQueryingLawList$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(QUERYING_LAWLIST_REQUEST, queryingLawList);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function lawDataSaga() {\n  return _regeneratorRuntime.wrap(function lawDataSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchGetRecentLawList), fork(watchGetDetailLawData), fork(watchQueryingLawList)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["/Users/gadamer1/Documents/스타트업/next-sample/next-sample/sagas/lawData.ts"],"names":["getRecentLawList","watchGetRecentLawList","getDetailLawData","watchGetDetailLawData","queryingLawList","watchQueryingLawList","lawDataSaga","fork","all","takeLatest","put","GET_RECENT_LAWLIST_REQUEST","GET_RECENT_LAWLIST_SUCCESS","GET_RECENT_LAWLIST_FAILURE","GET_DETAIL_LAWDATA_REQUEST","GET_DETAIL_LAWDATA_SUCCESS","GET_DETAIL_LAWDATA_FAILURE","QUERYING_LAWLIST_REQUEST","QUERYING_LAWLIST_FAILURE","QUERYING_LAWLIST_SUCCESS","action","type","console","error"],"mappings":";;oDAkBUA,gB;qDAaAC,qB;qDAIAC,gB;qDAaAC,qB;qDAIAC,e;qDAaAC,oB;qDAIeC,W;;AArEzB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,QAAkD,oBAAlD;AACA,SACEC,0BADF,EAEEC,0BAFF,EAGEC,0BAHF,EAIEC,0BAJF,EAKEC,0BALF,EAMEC,0BANF,EAOEC,wBAPF,EAQEC,wBARF,EASEC,wBATF,QAUO,6BAVP;;AAiBA,SAAUnB,gBAAV,CAA2BoB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMV,GAAG,CAAC;AACRW,YAAAA,IAAI,EAAET;AADE,WAAD,CAAT;;AAFJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMIU,UAAAA,OAAO,CAACC,KAAR;AANJ;AAOI,iBAAMb,GAAG,CAAC;AACRW,YAAAA,IAAI,EAAER;AADE,WAAD,CAAT;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUZ,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMQ,UAAU,CAACE,0BAAD,EAA6BX,gBAA7B,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUE,gBAAV,CAA2BkB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMV,GAAG,CAAC;AACRW,YAAAA,IAAI,EAAEN;AADE,WAAD,CAAT;;AAFJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMIO,UAAAA,OAAO,CAACC,KAAR;AANJ;AAOI,iBAAMb,GAAG,CAAC;AACRW,YAAAA,IAAI,EAAEL;AADE,WAAD,CAAT;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUb,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,UAAU,CAACK,0BAAD,EAA6BZ,gBAA7B,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUE,eAAV,CAA0BgB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMV,GAAG,CAAC;AACRW,YAAAA,IAAI,EAAEF;AADE,WAAD,CAAT;;AAFJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMIG,UAAAA,OAAO,CAACC,KAAR;AANJ;AAOI,iBAAMb,GAAG,CAAC;AACRW,YAAAA,IAAI,EAAEH;AADE,WAAD,CAAT;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUb,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMI,UAAU,CAACQ,wBAAD,EAA2Bb,eAA3B,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,GAAG,CAAC,CACRD,IAAI,CAACN,qBAAD,CADI,EAERM,IAAI,CAACJ,qBAAD,CAFI,EAGRI,IAAI,CAACF,oBAAD,CAHI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { fork, all, takeLatest, put, delay } from \"redux-saga/effects\";\nimport {\n  GET_RECENT_LAWLIST_REQUEST,\n  GET_RECENT_LAWLIST_SUCCESS,\n  GET_RECENT_LAWLIST_FAILURE,\n  GET_DETAIL_LAWDATA_REQUEST,\n  GET_DETAIL_LAWDATA_SUCCESS,\n  GET_DETAIL_LAWDATA_FAILURE,\n  QUERYING_LAWLIST_REQUEST,\n  QUERYING_LAWLIST_FAILURE,\n  QUERYING_LAWLIST_SUCCESS,\n} from \"../reducers/lawData/actions\";\nimport {\n  getRecentLawListRequest,\n  getDetailLawDataRequest,\n  queryingLawListRequest,\n} from \"../reducers/lawData/interfaces\";\n\nfunction* getRecentLawList(action: getRecentLawListRequest) {\n  try {\n    yield put({\n      type: GET_RECENT_LAWLIST_SUCCESS,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: GET_RECENT_LAWLIST_FAILURE,\n    });\n  }\n}\n\nfunction* watchGetRecentLawList() {\n  yield takeLatest(GET_RECENT_LAWLIST_REQUEST, getRecentLawList);\n}\n\nfunction* getDetailLawData(action: getDetailLawDataRequest) {\n  try {\n    yield put({\n      type: GET_DETAIL_LAWDATA_SUCCESS,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: GET_DETAIL_LAWDATA_FAILURE,\n    });\n  }\n}\n\nfunction* watchGetDetailLawData() {\n  yield takeLatest(GET_DETAIL_LAWDATA_REQUEST, getDetailLawData);\n}\n\nfunction* queryingLawList(action: queryingLawListRequest) {\n  try {\n    yield put({\n      type: QUERYING_LAWLIST_SUCCESS,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: QUERYING_LAWLIST_FAILURE,\n    });\n  }\n}\n\nfunction* watchQueryingLawList() {\n  yield takeLatest(QUERYING_LAWLIST_REQUEST, queryingLawList);\n}\n\nexport default function* lawDataSaga() {\n  yield all([\n    fork(watchGetRecentLawList),\n    fork(watchGetDetailLawData),\n    fork(watchQueryingLawList),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}