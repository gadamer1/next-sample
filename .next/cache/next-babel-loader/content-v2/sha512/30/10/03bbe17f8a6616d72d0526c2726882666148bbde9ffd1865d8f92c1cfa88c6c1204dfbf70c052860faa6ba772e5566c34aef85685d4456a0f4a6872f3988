{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { combineReducers } from \"redux\";\nimport lawData from \"./lawData/lawData\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        console.log(\"HYDRATE\", action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  lawData\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/gadamer1/Documents/스타트업/next-sample/next-sample/reducers/index.ts"],"names":["combineReducers","lawData","HYDRATE","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,WAAW,GAAGH,eAAe,CAAC;AAClCI,EAAAA,KAAK,EAAE,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC7B,YAAQA,MAAM,CAACC,IAAf;AACE,WAAKL,OAAL;AACEM,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CAAaD,KAAb,GAA8BC,MAAM,CAACI,OAArC;;AACF;AACE,eAAOL,KAAP;AALJ;AAOD,GATiC;AAUlCJ,EAAAA;AAVkC,CAAD,CAAnC;AAaA,eAAeE,WAAf","sourcesContent":["import { combineReducers } from \"redux\";\nimport lawData from \"./lawData/lawData\";\nimport { HYDRATE } from \"next-redux-wrapper\";\n\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        console.log(\"HYDRATE\", action);\n        return { ...(state as {}), ...action.payload };\n      default:\n        return state;\n    }\n  },\n  lawData,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}