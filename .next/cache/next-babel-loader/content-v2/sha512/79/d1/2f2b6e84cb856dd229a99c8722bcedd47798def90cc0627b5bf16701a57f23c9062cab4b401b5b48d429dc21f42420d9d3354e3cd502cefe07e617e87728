{"ast":null,"code":"import { fork, all, takeLatest, put } from \"redux-saga/effects\";\nimport { GET_RECENT_LAWLIST_REQUEST, GET_RECENT_LAWLIST_SUCCESS, GET_RECENT_LAWLIST_FAILURE, GET_DETAIL_LAWDATA_REQUEST, GET_DETAIL_LAWDATA_SUCCESS, GET_DETAIL_LAWDATA_FAILURE, QUERYING_LAWLIST_REQUEST, QUERYING_LAWLIST_FAILURE, QUERYING_LAWLIST_SUCCESS } from \"../reducers/lawData/actions\";\n\nfunction* getRecentLawList(action) {\n  try {\n    yield put({\n      type: GET_RECENT_LAWLIST_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: GET_RECENT_LAWLIST_FAILURE\n    });\n  }\n}\n\nfunction* watchGetRecentLawList() {\n  yield takeLatest(GET_RECENT_LAWLIST_REQUEST, getRecentLawList);\n}\n\nfunction* getDetailLawData(action) {\n  try {\n    yield put({\n      type: GET_DETAIL_LAWDATA_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: GET_DETAIL_LAWDATA_FAILURE\n    });\n  }\n}\n\nfunction* watchGetDetailLawData() {\n  yield takeLatest(GET_DETAIL_LAWDATA_REQUEST, getDetailLawData);\n}\n\nfunction* queryingLawList(action) {\n  try {\n    yield put({\n      type: QUERYING_LAWLIST_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: QUERYING_LAWLIST_FAILURE\n    });\n  }\n}\n\nfunction* watchQueryingLawList() {\n  yield takeLatest(QUERYING_LAWLIST_REQUEST, queryingLawList);\n}\n\nexport default function* lawDataSaga() {\n  yield all([fork(watchGetRecentLawList), fork(watchGetDetailLawData), fork(watchQueryingLawList)]);\n}","map":{"version":3,"sources":["/Users/gadamer1/Documents/스타트업/next-sample/next-sample/sagas/lawData.ts"],"names":["fork","all","takeLatest","put","GET_RECENT_LAWLIST_REQUEST","GET_RECENT_LAWLIST_SUCCESS","GET_RECENT_LAWLIST_FAILURE","GET_DETAIL_LAWDATA_REQUEST","GET_DETAIL_LAWDATA_SUCCESS","GET_DETAIL_LAWDATA_FAILURE","QUERYING_LAWLIST_REQUEST","QUERYING_LAWLIST_FAILURE","QUERYING_LAWLIST_SUCCESS","getRecentLawList","action","type","e","console","error","watchGetRecentLawList","getDetailLawData","watchGetDetailLawData","queryingLawList","watchQueryingLawList","lawDataSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,QAAkD,oBAAlD;AACA,SACEC,0BADF,EAEEC,0BAFF,EAGEC,0BAHF,EAIEC,0BAJF,EAKEC,0BALF,EAMEC,0BANF,EAOEC,wBAPF,EAQEC,wBARF,EASEC,wBATF,QAUO,6BAVP;;AAiBA,UAAUC,gBAAV,CAA2BC,MAA3B,EAA4D;AAC1D,MAAI;AACF,UAAMX,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEV;AADE,KAAD,CAAT;AAGD,GAJD,CAIE,OAAOW,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAET;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUa,qBAAV,GAAkC;AAChC,QAAMjB,UAAU,CAACE,0BAAD,EAA6BS,gBAA7B,CAAhB;AACD;;AAED,UAAUO,gBAAV,CAA2BN,MAA3B,EAA4D;AAC1D,MAAI;AACF,UAAMX,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEP;AADE,KAAD,CAAT;AAGD,GAJD,CAIE,OAAOQ,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEN;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUY,qBAAV,GAAkC;AAChC,QAAMnB,UAAU,CAACK,0BAAD,EAA6Ba,gBAA7B,CAAhB;AACD;;AAED,UAAUE,eAAV,CAA0BR,MAA1B,EAA0D;AACxD,MAAI;AACF,UAAMX,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEH;AADE,KAAD,CAAT;AAGD,GAJD,CAIE,OAAOI,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEJ;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUY,oBAAV,GAAiC;AAC/B,QAAMrB,UAAU,CAACQ,wBAAD,EAA2BY,eAA3B,CAAhB;AACD;;AAED,eAAe,UAAUE,WAAV,GAAwB;AACrC,QAAMvB,GAAG,CAAC,CACRD,IAAI,CAACmB,qBAAD,CADI,EAERnB,IAAI,CAACqB,qBAAD,CAFI,EAGRrB,IAAI,CAACuB,oBAAD,CAHI,CAAD,CAAT;AAKD","sourcesContent":["import { fork, all, takeLatest, put, delay } from \"redux-saga/effects\";\nimport {\n  GET_RECENT_LAWLIST_REQUEST,\n  GET_RECENT_LAWLIST_SUCCESS,\n  GET_RECENT_LAWLIST_FAILURE,\n  GET_DETAIL_LAWDATA_REQUEST,\n  GET_DETAIL_LAWDATA_SUCCESS,\n  GET_DETAIL_LAWDATA_FAILURE,\n  QUERYING_LAWLIST_REQUEST,\n  QUERYING_LAWLIST_FAILURE,\n  QUERYING_LAWLIST_SUCCESS,\n} from \"../reducers/lawData/actions\";\nimport {\n  getRecentLawListRequest,\n  getDetailLawDataRequest,\n  queryingLawListRequest,\n} from \"../reducers/lawData/interfaces\";\n\nfunction* getRecentLawList(action: getRecentLawListRequest) {\n  try {\n    yield put({\n      type: GET_RECENT_LAWLIST_SUCCESS,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: GET_RECENT_LAWLIST_FAILURE,\n    });\n  }\n}\n\nfunction* watchGetRecentLawList() {\n  yield takeLatest(GET_RECENT_LAWLIST_REQUEST, getRecentLawList);\n}\n\nfunction* getDetailLawData(action: getDetailLawDataRequest) {\n  try {\n    yield put({\n      type: GET_DETAIL_LAWDATA_SUCCESS,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: GET_DETAIL_LAWDATA_FAILURE,\n    });\n  }\n}\n\nfunction* watchGetDetailLawData() {\n  yield takeLatest(GET_DETAIL_LAWDATA_REQUEST, getDetailLawData);\n}\n\nfunction* queryingLawList(action: queryingLawListRequest) {\n  try {\n    yield put({\n      type: QUERYING_LAWLIST_SUCCESS,\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: QUERYING_LAWLIST_FAILURE,\n    });\n  }\n}\n\nfunction* watchQueryingLawList() {\n  yield takeLatest(QUERYING_LAWLIST_REQUEST, queryingLawList);\n}\n\nexport default function* lawDataSaga() {\n  yield all([\n    fork(watchGetRecentLawList),\n    fork(watchGetDetailLawData),\n    fork(watchQueryingLawList),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}