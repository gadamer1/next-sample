{"ast":null,"code":"import produce from \"immer\";\nimport { GET_RECENT_LAWLIST_REQUEST, GET_RECENT_LAWLIST_SUCCESS, GET_RECENT_LAWLIST_FAILURE, GET_DETAIL_LAWDATA_REQUEST, GET_DETAIL_LAWDATA_SUCCESS, GET_DETAIL_LAWDATA_FAILURE, QUERYING_LAWLIST_REQUEST, QUERYING_LAWLIST_SUCCESS, QUERYING_LAWLIST_FAILURE } from \"./actions\";\nvar DummyUnit = {\n  unitNum: \"1.\",\n  unitContent: '1. \"검역감염병\"이란 다음 각 목의 어느 하나에 해당하는 것을 말한다.'\n};\nvar DummyColumn = {\n  columnContent: \"⑤ 제1항과 제2항에 따른 소독 및 감염병 매개체를 없애는 일은 보건복지부령으로 정하는 자격이 있는 자가 하여야 한다. <개정 2010.1.18>\",\n  columnNum: \"⑤ \",\n  columnRevisionType: \"y\",\n  units: [DummyUnit, DummyUnit, DummyUnit, DummyUnit]\n};\nvar DummyProvision = {\n  provision: \"전문\",\n  provisionChange: \"Y\",\n  provisionContent: \"제1조(목적) 이 법은 우리나라로 들어오거나 외국으로 나가는 운송수단, 사람 및 화물을 검역(檢疫)하는 절차와 감염병을 예방하기 위한 조치에 관한 사항을 규정하여 국내외로 감염병이 번지는 것을 방지함으로써 국민의 건강을 유지ㆍ보호하는 것을 목적으로 한다.\",\n  provisionEffectiveDate: \"20140919\",\n  provisionMoveAfter: \"000000\",\n  provisionMoveBefore: \"000000\",\n  provisionNum: \"2\",\n  provisionRevision: \"본조신설\",\n  provisionTitle: \"국제공인예방접종지정기관의 지정 등\",\n  columns: [DummyColumn, DummyColumn, DummyColumn, DummyColumn, DummyColumn]\n};\nvar DummyLawDetail = {\n  TeleNum: \"010-1234-1234\",\n  competentDepartmentCode: \"1613000\",\n  competentDepartmentName: \"국토교통부\",\n  effectiveDate: \"20210421\",\n  lawKorName: \"검역법\",\n  lawTypeCode: \"A0002\",\n  lawTypeSort: \"법률\",\n  proclamationDate: \"20201020\",\n  proclamationNum: \"17553\",\n  rivisionName: \"일부개정\",\n  statutoryAbbreviation: \" \",\n  statutoryId: \"001790\",\n  statutorySerialNumber: \"222563\",\n  provisions: [DummyProvision, DummyProvision, DummyProvision, DummyProvision]\n};\nvar DummyLawList = {\n  StatutoryHangul: \"검역법\",\n  competentDepartmentCode: \"1790387\",\n  competentDepartmentName: \"질병관리청\",\n  effectiveDate: \"20140919\",\n  proclamationDate: \"20140318\",\n  proclamationNum: \"12445\",\n  rivisionName: \"일부개정\",\n  statutoryId: \"001790\",\n  statutorySerialNumber: \"0017902014031812445\"\n};\nvar initialState = {\n  lawData: {\n    lawDetail: null,\n    lawList: null,\n    searchLawResultList: {\n      query: null,\n      searchLawResultList: null\n    }\n  },\n  loadingStates: {\n    isQuerying: false\n  },\n  metaStates: {\n    requestError: 0\n  }\n};\n\nvar lawDataReducer = function lawDataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case GET_RECENT_LAWLIST_REQUEST:\n        {\n          draft.loadingStates.isQuerying = true;\n          break;\n        }\n\n      case GET_RECENT_LAWLIST_SUCCESS:\n        {\n          draft.loadingStates.isQuerying = false;\n          draft.lawData.lawList = [DummyLawList, DummyLawList, DummyLawList, DummyLawList];\n          break;\n        }\n\n      case GET_RECENT_LAWLIST_FAILURE:\n        {\n          draft.loadingStates.isQuerying = false;\n          break;\n        }\n\n      case GET_DETAIL_LAWDATA_REQUEST:\n        {\n          draft.loadingStates.isQuerying = true;\n          break;\n        }\n\n      case GET_DETAIL_LAWDATA_SUCCESS:\n        {\n          draft.loadingStates.isQuerying = false;\n          draft.lawData.lawDetail = DummyLawDetail;\n          break;\n        }\n\n      case GET_DETAIL_LAWDATA_FAILURE:\n        {\n          draft.loadingStates.isQuerying = false;\n          break;\n        }\n\n      case QUERYING_LAWLIST_REQUEST:\n        {\n          draft.loadingStates.isQuerying = true;\n          draft.lawData.searchLawResultList.query = action.parameter.query;\n          break;\n        }\n\n      case QUERYING_LAWLIST_SUCCESS:\n        {\n          draft.loadingStates.isQuerying = false;\n          console.log(\"?\");\n          draft.lawData.searchLawResultList.searchLawResultList = [DummyLawList, DummyLawList, DummyLawList, DummyLawList];\n          break;\n        }\n\n      case QUERYING_LAWLIST_FAILURE:\n        {\n          draft.loadingStates.isQuerying = false;\n          break;\n        }\n\n      default:\n        return draft;\n    }\n  });\n};\n\nexport default lawDataReducer;","map":{"version":3,"sources":["/Users/gadamer1/Documents/스타트업/next-sample/next-sample/reducers/lawData/lawData.ts"],"names":["produce","GET_RECENT_LAWLIST_REQUEST","GET_RECENT_LAWLIST_SUCCESS","GET_RECENT_LAWLIST_FAILURE","GET_DETAIL_LAWDATA_REQUEST","GET_DETAIL_LAWDATA_SUCCESS","GET_DETAIL_LAWDATA_FAILURE","QUERYING_LAWLIST_REQUEST","QUERYING_LAWLIST_SUCCESS","QUERYING_LAWLIST_FAILURE","DummyUnit","unitNum","unitContent","DummyColumn","columnContent","columnNum","columnRevisionType","units","DummyProvision","provision","provisionChange","provisionContent","provisionEffectiveDate","provisionMoveAfter","provisionMoveBefore","provisionNum","provisionRevision","provisionTitle","columns","DummyLawDetail","TeleNum","competentDepartmentCode","competentDepartmentName","effectiveDate","lawKorName","lawTypeCode","lawTypeSort","proclamationDate","proclamationNum","rivisionName","statutoryAbbreviation","statutoryId","statutorySerialNumber","provisions","DummyLawList","StatutoryHangul","initialState","lawData","lawDetail","lawList","searchLawResultList","query","loadingStates","isQuerying","metaStates","requestError","lawDataReducer","state","action","draft","type","parameter","console","log"],"mappings":"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","sourcesContent":["import produce from \"immer\";\nimport { lawDataStore, lawActions } from \"./interfaces\";\nimport {\n  GET_RECENT_LAWLIST_REQUEST,\n  GET_RECENT_LAWLIST_SUCCESS,\n  GET_RECENT_LAWLIST_FAILURE,\n  GET_DETAIL_LAWDATA_REQUEST,\n  GET_DETAIL_LAWDATA_SUCCESS,\n  GET_DETAIL_LAWDATA_FAILURE,\n  QUERYING_LAWLIST_REQUEST,\n  QUERYING_LAWLIST_SUCCESS,\n  QUERYING_LAWLIST_FAILURE,\n} from \"./actions\";\n\nconst DummyUnit = {\n  unitNum: \"1.\",\n  unitContent:\n    '1. \"검역감염병\"이란 다음 각 목의 어느 하나에 해당하는 것을 말한다.',\n};\n\nconst DummyColumn = {\n  columnContent:\n    \"⑤ 제1항과 제2항에 따른 소독 및 감염병 매개체를 없애는 일은 보건복지부령으로 정하는 자격이 있는 자가 하여야 한다. <개정 2010.1.18>\",\n  columnNum: \"⑤ \",\n  columnRevisionType: \"y\",\n  units: [DummyUnit, DummyUnit, DummyUnit, DummyUnit],\n};\n\nconst DummyProvision = {\n  provision: \"전문\",\n  provisionChange: \"Y\",\n  provisionContent:\n    \"제1조(목적) 이 법은 우리나라로 들어오거나 외국으로 나가는 운송수단, 사람 및 화물을 검역(檢疫)하는 절차와 감염병을 예방하기 위한 조치에 관한 사항을 규정하여 국내외로 감염병이 번지는 것을 방지함으로써 국민의 건강을 유지ㆍ보호하는 것을 목적으로 한다.\",\n  provisionEffectiveDate: \"20140919\",\n  provisionMoveAfter: \"000000\",\n  provisionMoveBefore: \"000000\",\n  provisionNum: \"2\",\n  provisionRevision: \"본조신설\",\n  provisionTitle: \"국제공인예방접종지정기관의 지정 등\",\n  columns: [DummyColumn, DummyColumn, DummyColumn, DummyColumn, DummyColumn],\n};\n\nconst DummyLawDetail = {\n  TeleNum: \"010-1234-1234\",\n  competentDepartmentCode: \"1613000\",\n  competentDepartmentName: \"국토교통부\",\n  effectiveDate: \"20210421\",\n  lawKorName: \"검역법\",\n  lawTypeCode: \"A0002\",\n  lawTypeSort: \"법률\",\n  proclamationDate: \"20201020\",\n  proclamationNum: \"17553\",\n  rivisionName: \"일부개정\",\n  statutoryAbbreviation: \" \",\n  statutoryId: \"001790\",\n  statutorySerialNumber: \"222563\",\n  provisions: [DummyProvision, DummyProvision, DummyProvision, DummyProvision],\n};\n\nconst DummyLawList = {\n  StatutoryHangul: \"검역법\",\n  competentDepartmentCode: \"1790387\",\n  competentDepartmentName: \"질병관리청\",\n  effectiveDate: \"20140919\",\n  proclamationDate: \"20140318\",\n  proclamationNum: \"12445\",\n  rivisionName: \"일부개정\",\n  statutoryId: \"001790\",\n  statutorySerialNumber: \"0017902014031812445\",\n};\n\nconst initialState: lawDataStore = {\n  lawData: {\n    lawDetail: null,\n    lawList: null,\n    searchLawResultList: {\n      query: null,\n      searchLawResultList: null,\n    },\n  },\n  loadingStates: {\n    isQuerying: false,\n  },\n  metaStates: {\n    requestError: 0,\n  },\n};\n\nconst lawDataReducer = (state = initialState, action: lawActions) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case GET_RECENT_LAWLIST_REQUEST: {\n        draft.loadingStates.isQuerying = true;\n        break;\n      }\n      case GET_RECENT_LAWLIST_SUCCESS: {\n        draft.loadingStates.isQuerying = false;\n        draft.lawData.lawList = [\n          DummyLawList,\n          DummyLawList,\n          DummyLawList,\n          DummyLawList,\n        ];\n        break;\n      }\n      case GET_RECENT_LAWLIST_FAILURE: {\n        draft.loadingStates.isQuerying = false;\n        break;\n      }\n\n      case GET_DETAIL_LAWDATA_REQUEST: {\n        draft.loadingStates.isQuerying = true;\n        break;\n      }\n      case GET_DETAIL_LAWDATA_SUCCESS: {\n        draft.loadingStates.isQuerying = false;\n        draft.lawData.lawDetail = DummyLawDetail;\n        break;\n      }\n      case GET_DETAIL_LAWDATA_FAILURE: {\n        draft.loadingStates.isQuerying = false;\n        break;\n      }\n\n      case QUERYING_LAWLIST_REQUEST: {\n        draft.loadingStates.isQuerying = true;\n        draft.lawData.searchLawResultList.query = action.parameter.query;\n        break;\n      }\n      case QUERYING_LAWLIST_SUCCESS: {\n        draft.loadingStates.isQuerying = false;\n        console.log(\"?\");\n        draft.lawData.searchLawResultList.searchLawResultList = [\n          DummyLawList,\n          DummyLawList,\n          DummyLawList,\n          DummyLawList,\n        ];\n        break;\n      }\n      case QUERYING_LAWLIST_FAILURE: {\n        draft.loadingStates.isQuerying = false;\n        break;\n      }\n\n      default:\n        return draft;\n    }\n  });\n};\n\nexport default lawDataReducer;\n"]},"metadata":{},"sourceType":"module"}